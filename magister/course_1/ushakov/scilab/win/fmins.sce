// Aram solve
A0 = [  [ 0.         -0.749         0.064]
        [ 1.         -0.224         0]
        [ 0.          0.            -1.]]
udA = [ [ 0.         -0.412         -0.047]
        [ 0.         -0.124         -0]
        [ 0.          0.            0.]]
odA = [ [ 0.          0.412         0.047]
        [ 0.          0.124         0]
        [ 0.          0.            0.]]
 B = [[0],
       [0],
       [1]]
C =     [0, 1, 0]
A0 = [  [ 0.         -0.67361111  0.04050926]
        [ 1.         -2.64953704  0.30381944]
        [ 0.          0.          -1.        ]]
udA = [ [ 0.         -0.45138889 -0.02199074]
        [ 0.         -1.77546296 -0.16493056]
        [ 0.          0.          0.        ]]
odA = [ [ 0.          0.45138889  0.02199074]
        [ 0.          1.77546296  0.16493056]
        [ 0.          0.          0.        ]]

// my solve
A0 = [  [ 0.         -0.67361111  0.04050926]
        [ 1.         -2.64953704  0.30381944]
        [ 0.          0.          -1.        ]]
udA = [ [ 0.         -0.45138889 -0.02199074]
        [ 0.         -1.77546296 -0.16493056]
        [ 0.          0.          0.        ]]
odA = [ [ 0.          0.45138889  0.02199074]
        [ 0.          1.77546296  0.16493056]
        [ 0.          0.          0.        ]]

B =     [[0]; [0]; [1]]
C =     [0, 1, 0]



w0 = 3
Lambda = [  -1, 0, 0;
            0, -0.7, 0;
            0,          0,          -1.3] * w0

              
H0 = [1, 1, 1]


function [M] = sylvEx(H)
    Hl = [H(1), H(2), H(3)]
    M = sylv(-A0, Lambda, -B*Hl, 'c');
endfunction

function [cndM]=condEx(H)
    Hl = [H(1), H(2), H(3)]
    M = sylv(-A0, Lambda, -B*Hl, 'c');
    cndM = cond(M);
endfunction


[H, cM] = fminsearch(condEx, H0)

w0 = [-0.0261259  -0.00302927 -2.90999674]
H = [ -3.79097945e-03   4.17112672e-04   2.38190282e+00]
Lambda = [  [w0(1), 0,  0],
            [0, w0(2),  0],
            [0,     0,      w0(3)]] * 162
            
w0 = [ -0.12087173  -0.0204533   -2.9770155   14.18774518]
H = [ -8.86624664e-02  -1.42617207e-03   2.44651774e+00]
Lambda = [  [w0(1), 0,  0],
            [0, w0(2),  0],
            [0,     0,      w0(3)]] * w0(4) * 30

M = [[ -9.28056543e-03  -4.85592658e-02  -6.26182213e-05]
 [ -2.67359002e-02  -2.12144972e-02  -4.42957662e-04]
 [ -5.17013259e-02  -4.91467838e-03   5.79233797e-02]]
 
w0 = [-0.49718139  0.58359066  0.40907368 -1.51686475 -2.68546382  0.94384407]
H = [-0.64473618  1.93459698  1.45585416]
Lambda = [  [w0(1), w0(2),  0],
            [w0(3), w0(4),  0],
            [0,     0,      w0(5)]] * w0(6)*3



Lambda = [[  -2.29765025,    0. ,           0.,        ],
 [   0.         ,  -0.28491155  ,  0.        ],
 [   0.         ,   0.      ,   -246.1036489 ]]*3
H = [ -4.29851934e-03 , -2.29278489e-06  , 2.38744173e+00]
M = [[ -2.64051117e-03 , -8.93915334e-03 , -1.62991967e-06],
 [ -9.11914470e-03 , -3.78140147e-03 , -1.20996537e-05],
 [ -1.87083275e-03  ,-8.04735670e-06,   9.70096031e-03]]
M = sylv(-A0, Lambda, -B * H, 'c');


Lambda = [[ -2.67560143e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -2.86974931e-01   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00  -5.51686902e+02]]
H = [ -6.77080361e-03   4.06707979e-05   2.08049504e+00]
M = [[  7.00302448e-04   3.52127343e-03  -2.79455495e-07]
 [  2.62943794e-03   1.50867207e-03  -2.08632391e-06]
 [ -2.53057258e-03   1.41722476e-04   3.77115178e-03]]
Lambda = [[ -2.37068348e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -2.84942876e-01   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00  -5.18161134e+02]]
H = [  1.40392441e-04  -1.30667376e-06   1.57808015e+00]
M = [[ -9.13318893e-04  -3.06002295e-03  -2.40429647e-07]
 [ -3.21074135e-03  -1.29468990e-03  -1.79443812e-06]
 [  5.92202384e-05  -4.58573936e-06   3.04553940e-03]]
 Lambda = [[  -2.55263887    0.            0.        ]
 [   0.           -0.28517467    0.        ]
 [   0.            0.         -196.8476499 ]]
H = [ -1.59992404e-02   2.00518062e-05   2.53499733e+00]
M = [[  2.95151115e-03   1.18666448e-02  -2.71905154e-06]
 [  1.08077807e-02   5.02799729e-03  -2.01333440e-05]
 [ -6.26772578e-03   7.03141218e-05   1.28779659e-02]]
 Lambda = [[  -3.81149557    0.            0.        ]
 [   0.           -0.14751504    0.        ]
 [   0.            0.         -147.28166266]]
H = [ -4.60565813e-02   1.00070881e-03   2.08296000e+00]
M = [[  5.96141456e-04  -2.30119310e-03  -4.02564394e-06]
 [  2.64647194e-03  -9.59825293e-05  -2.96808253e-05]
 [ -1.20835983e-02   6.78377483e-03   1.41426975e-02]]
 Lambda = [[ -2.90516198e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -3.01228745e-01   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00  -2.23671247e+03]]
H = [ -2.19591081e-03   8.00437575e-05   1.94770960e+00]
M = [[  1.14754023e-04   8.61916856e-04  -1.58066243e-08]
 [  4.49457382e-04   4.01416215e-04  -1.18415420e-07]
 [ -7.55865190e-04   2.65724167e-04   8.70791230e-04]]
 
 Lambda = [[ -3.80302522e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.65828788e-01   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00  -1.76036374e+03]]
H = [ -5.35964341e-03   9.90310852e-05   2.30637206e+00]
M = [[  7.00102658e-05  -2.37384832e-04  -3.02360617e-08]
 [  3.10506579e-04  -2.25257052e-05  -2.26444235e-07]
 [ -1.40931051e-03   5.97188742e-04   1.31016790e-03]]

F0 = M * Lambda * M**(-1)
K = H * M**(-1)
F = A0 - B * K
Kg = -(C * F**(-1) * B)**(-1)
G = B * Kg

uF = F + udA
oF = F + odA

poly(uF, 'x')

importXcosDiagram("/media/data/evo/ifmo/magister/course_1/ushakov/scilab/problem6.zcos");
xcos_simulate(scs_m, 4);
plot(O.time, O.values);
plot([0,50], [1.05,1.05], "g--")

















